#ifndef GAMEBOY_INSTRUCTION_H
#define GAMEBOY_INSTRUCTION_H

#include <cstdint>
#include <array>
#include <string_view>

namespace gameboy::instruction {

struct instruction_info {
    uint8_t length = 0u;
    uint8_t cycle_count = 0u;
    std::string_view mnemonic = "invalid";
};

static constexpr std::array standard_instruction_set{
    instruction_info{1, 4, "NOP"},
    instruction_info{3, 12, "LD BC,{:#06x}"},
    instruction_info{1, 8, "LD (BC),A"},
    instruction_info{1, 8, "INC BC"},
    instruction_info{1, 4, "INC B"},
    instruction_info{1, 4, "DEC B"},
    instruction_info{2, 8, "LD B,{:#04x}"},
    instruction_info{1, 4, "RLCA"},
    instruction_info{3, 20, "LD ({:#06x}),SP"},
    instruction_info{1, 8, "ADD HL,BC"},
    instruction_info{1, 8, "LD A,(BC)"},
    instruction_info{1, 8, "DEC BC"},
    instruction_info{1, 4, "INC C"},
    instruction_info{1, 4, "DEC C"},
    instruction_info{2, 8, "LD C,{:#04x}"},
    instruction_info{1, 4, "RRCA"},

    instruction_info{2, 4, "STOP 0"},
    instruction_info{3, 12, "LD DE,{:#06x}"},
    instruction_info{1, 8, "LD (DE),A"},
    instruction_info{1, 8, "INC DE"},
    instruction_info{1, 4, "INC D"},
    instruction_info{1, 4, "DEC D"},
    instruction_info{2, 8, "LD D,{:#04x}"},
    instruction_info{1, 4, "RLA"},
    instruction_info{2, 12, "JR {:#04x}"},
    instruction_info{1, 8, "ADD HL,DE"},
    instruction_info{1, 8, "LD A,(DE)"},
    instruction_info{1, 8, "DEC DE"},
    instruction_info{1, 4, "INC E"},
    instruction_info{1, 4, "DEC E"},
    instruction_info{2, 8, "LD E,{:#04x}"},
    instruction_info{1, 4, "RRA"},

    instruction_info{2, 12, "JR NZ,{:#04x}"},
    instruction_info{3, 12, "LD HL,{:#06x}"},
    instruction_info{1, 8, "LD (HL+),A"},
    instruction_info{1, 8, "INC HL"},
    instruction_info{1, 4, "INC H"},
    instruction_info{1, 4, "DEC H"},
    instruction_info{2, 8, "LD H,{:#04x}"},
    instruction_info{1, 4, "DAA"},
    instruction_info{2, 12, "JR Z,{:#04x}"},
    instruction_info{1, 8, "ADD HL,HL"},
    instruction_info{1, 8, "LD A,(HL+)"},
    instruction_info{1, 8, "DEC HL"},
    instruction_info{1, 4, "INC L"},
    instruction_info{1, 4, "DEC L"},
    instruction_info{2, 8, "LD L,{:#04x}"},
    instruction_info{1, 4, "CPL"},

    instruction_info{2, 12, "JR NC,{:#04x}"},
    instruction_info{3, 12, "LD SP,{:#06x}"},
    instruction_info{1, 8, "LD (HL-),A"},
    instruction_info{1, 8, "INC SP"},
    instruction_info{1, 12, "INC (HL)"},
    instruction_info{1, 12, "DEC (HL)"},
    instruction_info{2, 12, "LD (HL),{:#04x}"},
    instruction_info{1, 4, "SCF"},
    instruction_info{2, 12, "JR C,{:#04x}"},
    instruction_info{1, 8, "ADD HL,SP"},
    instruction_info{1, 8, "LD A,(HL-)"},
    instruction_info{1, 8, "DEC SP"},
    instruction_info{1, 4, "INC A"},
    instruction_info{1, 4, "DEC A"},
    instruction_info{2, 8, "LD A,{:#04x}"},
    instruction_info{1, 4, "CCF"},

    instruction_info{1, 4, "LD B,B"},
    instruction_info{1, 4, "LD B,C"},
    instruction_info{1, 4, "LD B,D"},
    instruction_info{1, 4, "LD B,E"},
    instruction_info{1, 4, "LD B,H"},
    instruction_info{1, 4, "LD B,L"},
    instruction_info{1, 8, "LD B,(HL)"},
    instruction_info{1, 4, "LD B,A"},
    instruction_info{1, 4, "LD C,B"},
    instruction_info{1, 4, "LD C,C"},
    instruction_info{1, 4, "LD C,D"},
    instruction_info{1, 4, "LD C,E"},
    instruction_info{1, 4, "LD C,H"},
    instruction_info{1, 4, "LD C,L"},
    instruction_info{1, 8, "LD C,(HL)"},
    instruction_info{1, 4, "LD C,A"},

    instruction_info{1, 4, "LD D,B"},
    instruction_info{1, 4, "LD D,C"},
    instruction_info{1, 4, "LD D,D"},
    instruction_info{1, 4, "LD D,E"},
    instruction_info{1, 4, "LD D,H"},
    instruction_info{1, 4, "LD D,L"},
    instruction_info{1, 8, "LD D,(HL)"},
    instruction_info{1, 4, "LD D,A"},
    instruction_info{1, 4, "LD E,B"},
    instruction_info{1, 4, "LD E,C"},
    instruction_info{1, 4, "LD E,D"},
    instruction_info{1, 4, "LD E,E"},
    instruction_info{1, 4, "LD E,H"},
    instruction_info{1, 4, "LD E,L"},
    instruction_info{1, 8, "LD E,(HL)"},
    instruction_info{1, 4, "LD E,A"},

    instruction_info{1, 4, "LD H,B"},
    instruction_info{1, 4, "LD H,C"},
    instruction_info{1, 4, "LD H,D"},
    instruction_info{1, 4, "LD H,E"},
    instruction_info{1, 4, "LD H,H"},
    instruction_info{1, 4, "LD H,L"},
    instruction_info{1, 8, "LD H,(HL)"},
    instruction_info{1, 4, "LD H,A"},
    instruction_info{1, 4, "LD L,B"},
    instruction_info{1, 4, "LD L,C"},
    instruction_info{1, 4, "LD L,D"},
    instruction_info{1, 4, "LD L,E"},
    instruction_info{1, 4, "LD L,H"},
    instruction_info{1, 4, "LD L,L"},
    instruction_info{1, 8, "LD L,(HL)"},
    instruction_info{1, 4, "LD L,A"},

    instruction_info{1, 8, "LD (HL),B"},
    instruction_info{1, 8, "LD (HL),C"},
    instruction_info{1, 8, "LD (HL),D"},
    instruction_info{1, 8, "LD (HL),E"},
    instruction_info{1, 8, "LD (HL),H"},
    instruction_info{1, 8, "LD (HL),L"},
    instruction_info{1, 4, "HALT"},
    instruction_info{1, 8, "LD (HL),A"},
    instruction_info{1, 4, "LD A,B"},
    instruction_info{1, 4, "LD A,C"},
    instruction_info{1, 4, "LD A,D"},
    instruction_info{1, 4, "LD A,E"},
    instruction_info{1, 4, "LD A,H"},
    instruction_info{1, 4, "LD A,L"},
    instruction_info{1, 8, "LD A,(HL)"},
    instruction_info{1, 4, "LD A,A"},

    instruction_info{1, 4, "ADD A,B"},
    instruction_info{1, 4, "ADD A,C"},
    instruction_info{1, 4, "ADD A,D"},
    instruction_info{1, 4, "ADD A,E"},
    instruction_info{1, 4, "ADD A,H"},
    instruction_info{1, 4, "ADD A,L"},
    instruction_info{1, 8, "ADD A,(HL)"},
    instruction_info{1, 4, "ADD A,A"},
    instruction_info{1, 4, "ADC A,B"},
    instruction_info{1, 4, "ADC A,C"},
    instruction_info{1, 4, "ADC A,D"},
    instruction_info{1, 4, "ADC A,E"},
    instruction_info{1, 4, "ADC A,H"},
    instruction_info{1, 4, "ADC A,L"},
    instruction_info{1, 8, "ADC A,(HL)"},
    instruction_info{1, 4, "ADC A,A"},

    instruction_info{1, 4, "SUB B"},
    instruction_info{1, 4, "SUB C"},
    instruction_info{1, 4, "SUB D"},
    instruction_info{1, 4, "SUB E"},
    instruction_info{1, 4, "SUB H"},
    instruction_info{1, 4, "SUB L"},
    instruction_info{1, 8, "SUB (HL)"},
    instruction_info{1, 4, "SUB A"},
    instruction_info{1, 4, "SBC A,B"},
    instruction_info{1, 4, "SBC A,C"},
    instruction_info{1, 4, "SBC A,D"},
    instruction_info{1, 4, "SBC A,E"},
    instruction_info{1, 4, "SBC A,H"},
    instruction_info{1, 4, "SBC A,L"},
    instruction_info{1, 8, "SBC A,(HL)"},
    instruction_info{1, 4, "SBC A,A"},

    instruction_info{1, 4, "AND B"},
    instruction_info{1, 4, "AND C"},
    instruction_info{1, 4, "AND D"},
    instruction_info{1, 4, "AND E"},
    instruction_info{1, 4, "AND H"},
    instruction_info{1, 4, "AND L"},
    instruction_info{1, 8, "AND (HL)"},
    instruction_info{1, 4, "AND A"},
    instruction_info{1, 4, "XOR B"},
    instruction_info{1, 4, "XOR C"},
    instruction_info{1, 4, "XOR D"},
    instruction_info{1, 4, "XOR E"},
    instruction_info{1, 4, "XOR H"},
    instruction_info{1, 4, "XOR L"},
    instruction_info{1, 8, "XOR (HL)"},
    instruction_info{1, 4, "XOR A"},

    instruction_info{1, 4, "OR B"},
    instruction_info{1, 4, "OR C"},
    instruction_info{1, 4, "OR D"},
    instruction_info{1, 4, "OR E"},
    instruction_info{1, 4, "OR H"},
    instruction_info{1, 4, "OR L"},
    instruction_info{1, 8, "OR (HL)"},
    instruction_info{1, 4, "OR A"},
    instruction_info{1, 4, "CP B"},
    instruction_info{1, 4, "CP C"},
    instruction_info{1, 4, "CP D"},
    instruction_info{1, 4, "CP E"},
    instruction_info{1, 4, "CP H"},
    instruction_info{1, 4, "CP L"},
    instruction_info{1, 8, "CP (HL)"},
    instruction_info{1, 4, "CP A"},

    instruction_info{1, 20, "RET NZ"},
    instruction_info{1, 12, "POP BC"},
    instruction_info{3, 16, "JP NZ,{:#06x}"},
    instruction_info{3, 16, "JP {:#06x}"},
    instruction_info{3, 24, "CALL NZ,{:#06x}"},
    instruction_info{1, 16, "PUSH BC"},
    instruction_info{2, 8, "ADD A,{:#04x}"},
    instruction_info{1, 16, "RST 0x00"},
    instruction_info{1, 20, "RET Z"},
    instruction_info{1, 16, "RET"},
    instruction_info{3, 16, "JP Z,{:#06x}"},
    instruction_info{1, 4, "PREFIX CB"},
    instruction_info{3, 24, "CALL Z,{:#06x}"},
    instruction_info{3, 24, "CALL {:#06x}"},
    instruction_info{2, 8, "ADC A,{:#04x}"},
    instruction_info{1, 16, "RST 0x08"},

    instruction_info{1, 20, "RET NC"},
    instruction_info{1, 12, "POP DE"},
    instruction_info{3, 16, "JP NC,{:#06x}"},
    instruction_info{}, // placeholder
    instruction_info{3, 24, "CALL NC,{:#06x}"},
    instruction_info{1, 16, "PUSH DE"},
    instruction_info{2, 8, "SUB {:#04x}"},
    instruction_info{1, 16, "RST 0x10"},
    instruction_info{1, 20, "RET C"},
    instruction_info{1, 16, "RETI"},
    instruction_info{3, 16, "JP C,{:#06x}"},
    instruction_info{}, // placeholder
    instruction_info{3, 24, "CALL C,{:#06x}"},
    instruction_info{}, // placeholder
    instruction_info{2, 8, "SBC A,{:#04x}"},
    instruction_info{1, 16, "RST 0x18"},

    instruction_info{2, 12, "LD (0xFF00+{:#04x}),A"},
    instruction_info{1, 12, "POP HL"},
    instruction_info{2, 8, "LD (0xFF00+C),A"},
    instruction_info{}, // placeholder
    instruction_info{}, // placeholder
    instruction_info{1, 16, "PUSH HL"},
    instruction_info{2, 8, "AND {:#04x}"},
    instruction_info{1, 16, "RST 0x20"},
    instruction_info{2, 16, "ADD SP,{:#04x}"},
    instruction_info{1, 4, "JP (HL)"},
    instruction_info{3, 16, "LD ({:#06x}),A"},
    instruction_info{}, // placeholder
    instruction_info{}, // placeholder
    instruction_info{}, // placeholder
    instruction_info{2, 8, "XOR {:#04x}"},
    instruction_info{1, 16, "RST 0x28"},

    instruction_info{2, 12, "LD A,(0xFF00+{:#04x})"},
    instruction_info{1, 12, "POP AF"},
    instruction_info{2, 8, "LD A,(0xFF00+C)"},
    instruction_info{1, 4, "DI"},
    instruction_info{}, // placeholder
    instruction_info{1, 16, "PUSH AF"},
    instruction_info{2, 8, "OR {:#04x}"},
    instruction_info{1, 16, "RST 0x30"},
    instruction_info{2, 12, "LD HL,SP+{:#04x}"},
    instruction_info{1, 8, "LD SP,HL"},
    instruction_info{3, 16, "LD A,({:#06x})"},
    instruction_info{1, 4, "EI"},
    instruction_info{}, // placeholder
    instruction_info{}, // placeholder
    instruction_info{2, 8, "CP {:#04x}"},
    instruction_info{1, 16, "RST 0x38"}
};

static constexpr std::array extended_instruction_set{
    instruction_info{1, 8, "RLC B"},
    instruction_info{1, 8, "RLC C"},
    instruction_info{1, 8, "RLC D"},
    instruction_info{1, 8, "RLC E"},
    instruction_info{1, 8, "RLC H"},
    instruction_info{1, 8, "RLC L"},
    instruction_info{1, 16, "RLC (HL)"},
    instruction_info{1, 8, "RLC A"},
    instruction_info{1, 8, "RRC B"},
    instruction_info{1, 8, "RRC C"},
    instruction_info{1, 8, "RRC D"},
    instruction_info{1, 8, "RRC E"},
    instruction_info{1, 8, "RRC H"},
    instruction_info{1, 8, "RRC L"},
    instruction_info{1, 16, "RRC (HL)"},
    instruction_info{1, 8, "RRC A"},

    instruction_info{1, 8, "RL B"},
    instruction_info{1, 8, "RL C"},
    instruction_info{1, 8, "RL D"},
    instruction_info{1, 8, "RL E"},
    instruction_info{1, 8, "RL H"},
    instruction_info{1, 8, "RL L"},
    instruction_info{1, 16, "RL (HL)"},
    instruction_info{1, 8, "RL A"},
    instruction_info{1, 8, "RR B"},
    instruction_info{1, 8, "RR C"},
    instruction_info{1, 8, "RR D"},
    instruction_info{1, 8, "RR E"},
    instruction_info{1, 8, "RR H"},
    instruction_info{1, 8, "RR L"},
    instruction_info{1, 16, "RR (HL)"},
    instruction_info{1, 8, "RR A"},

    instruction_info{1, 8, "SLA B"},
    instruction_info{1, 8, "SLA C"},
    instruction_info{1, 8, "SLA D"},
    instruction_info{1, 8, "SLA E"},
    instruction_info{1, 8, "SLA H"},
    instruction_info{1, 8, "SLA L"},
    instruction_info{1, 16, "SLA (HL)"},
    instruction_info{1, 8, "SLA A"},
    instruction_info{1, 8, "SRA B"},
    instruction_info{1, 8, "SRA C"},
    instruction_info{1, 8, "SRA D"},
    instruction_info{1, 8, "SRA E"},
    instruction_info{1, 8, "SRA H"},
    instruction_info{1, 8, "SRA L"},
    instruction_info{1, 16, "SRA (HL)"},
    instruction_info{1, 8, "SRA A"},

    instruction_info{1, 8, "SWAP B"},
    instruction_info{1, 8, "SWAP C"},
    instruction_info{1, 8, "SWAP D"},
    instruction_info{1, 8, "SWAP E"},
    instruction_info{1, 8, "SWAP H"},
    instruction_info{1, 8, "SWAP L"},
    instruction_info{1, 16, "SWAP (HL)"},
    instruction_info{1, 8, "SWAP A"},
    instruction_info{1, 8, "SRL B"},
    instruction_info{1, 8, "SRL C"},
    instruction_info{1, 8, "SRL D"},
    instruction_info{1, 8, "SRL E"},
    instruction_info{1, 8, "SRL H"},
    instruction_info{1, 8, "SRL L"},
    instruction_info{1, 16, "SRL (HL)"},
    instruction_info{1, 8, "SRL A"},

    instruction_info{1, 8, "BIT 0,B"},
    instruction_info{1, 8, "BIT 0,C"},
    instruction_info{1, 8, "BIT 0,D"},
    instruction_info{1, 8, "BIT 0,E"},
    instruction_info{1, 8, "BIT 0,H"},
    instruction_info{1, 8, "BIT 0,L"},
    instruction_info{1, 16, "BIT 0,(HL)"},
    instruction_info{1, 8, "BIT 0,A"},
    instruction_info{1, 8, "BIT 1,B"},
    instruction_info{1, 8, "BIT 1,C"},
    instruction_info{1, 8, "BIT 1,D"},
    instruction_info{1, 8, "BIT 1,E"},
    instruction_info{1, 8, "BIT 1,H"},
    instruction_info{1, 8, "BIT 1,L"},
    instruction_info{1, 16, "BIT 1,(HL)"},
    instruction_info{1, 8, "BIT 1,A"},

    instruction_info{1, 8, "BIT 2,B"},
    instruction_info{1, 8, "BIT 2,C"},
    instruction_info{1, 8, "BIT 2,D"},
    instruction_info{1, 8, "BIT 2,E"},
    instruction_info{1, 8, "BIT 2,H"},
    instruction_info{1, 8, "BIT 2,L"},
    instruction_info{1, 16, "BIT 2,(HL)"},
    instruction_info{1, 8, "BIT 2,A"},
    instruction_info{1, 8, "BIT 3,B"},
    instruction_info{1, 8, "BIT 3,C"},
    instruction_info{1, 8, "BIT 3,D"},
    instruction_info{1, 8, "BIT 3,E"},
    instruction_info{1, 8, "BIT 3,H"},
    instruction_info{1, 8, "BIT 3,L"},
    instruction_info{1, 16, "BIT 3,(HL)"},
    instruction_info{1, 8, "BIT 3,A"},

    instruction_info{1, 8, "BIT 4,B"},
    instruction_info{1, 8, "BIT 4,C"},
    instruction_info{1, 8, "BIT 4,D"},
    instruction_info{1, 8, "BIT 4,E"},
    instruction_info{1, 8, "BIT 4,H"},
    instruction_info{1, 8, "BIT 4,L"},
    instruction_info{1, 16, "BIT 4,(HL)"},
    instruction_info{1, 8, "BIT 4,A"},
    instruction_info{1, 8, "BIT 5,B"},
    instruction_info{1, 8, "BIT 5,C"},
    instruction_info{1, 8, "BIT 5,D"},
    instruction_info{1, 8, "BIT 5,E"},
    instruction_info{1, 8, "BIT 5,H"},
    instruction_info{1, 8, "BIT 5,L"},
    instruction_info{1, 16, "BIT 5,(HL)"},
    instruction_info{1, 8, "BIT 5,A"},

    instruction_info{1, 8, "BIT 6,B"},
    instruction_info{1, 8, "BIT 6,C"},
    instruction_info{1, 8, "BIT 6,D"},
    instruction_info{1, 8, "BIT 6,E"},
    instruction_info{1, 8, "BIT 6,H"},
    instruction_info{1, 8, "BIT 6,L"},
    instruction_info{1, 16, "BIT 6,(HL)"},
    instruction_info{1, 8, "BIT 6,A"},
    instruction_info{1, 8, "BIT 7,B"},
    instruction_info{1, 8, "BIT 7,C"},
    instruction_info{1, 8, "BIT 7,D"},
    instruction_info{1, 8, "BIT 7,E"},
    instruction_info{1, 8, "BIT 7,H"},
    instruction_info{1, 8, "BIT 7,L"},
    instruction_info{1, 16, "BIT 7,(HL)"},
    instruction_info{1, 8, "BIT 7,A"},

    instruction_info{1, 8, "RES 0,B"},
    instruction_info{1, 8, "RES 0,C"},
    instruction_info{1, 8, "RES 0,D"},
    instruction_info{1, 8, "RES 0,E"},
    instruction_info{1, 8, "RES 0,H"},
    instruction_info{1, 8, "RES 0,L"},
    instruction_info{1, 16, "RES 0,(HL)"},
    instruction_info{1, 8, "RES 0,A"},
    instruction_info{1, 8, "RES 1,B"},
    instruction_info{1, 8, "RES 1,C"},
    instruction_info{1, 8, "RES 1,D"},
    instruction_info{1, 8, "RES 1,E"},
    instruction_info{1, 8, "RES 1,H"},
    instruction_info{1, 8, "RES 1,L"},
    instruction_info{1, 16, "RES 1,(HL)"},
    instruction_info{1, 8, "RES 1,A"},

    instruction_info{1, 8, "RES 2,B"},
    instruction_info{1, 8, "RES 2,C"},
    instruction_info{1, 8, "RES 2,D"},
    instruction_info{1, 8, "RES 2,E"},
    instruction_info{1, 8, "RES 2,H"},
    instruction_info{1, 8, "RES 2,L"},
    instruction_info{1, 16, "RES 2,(HL)"},
    instruction_info{1, 8, "RES 2,A"},
    instruction_info{1, 8, "RES 3,B"},
    instruction_info{1, 8, "RES 3,C"},
    instruction_info{1, 8, "RES 3,D"},
    instruction_info{1, 8, "RES 3,E"},
    instruction_info{1, 8, "RES 3,H"},
    instruction_info{1, 8, "RES 3,L"},
    instruction_info{1, 16, "RES 3,(HL)"},
    instruction_info{1, 8, "RES 3,A"},

    instruction_info{1, 8, "RES 4,B"},
    instruction_info{1, 8, "RES 4,C"},
    instruction_info{1, 8, "RES 4,D"},
    instruction_info{1, 8, "RES 4,E"},
    instruction_info{1, 8, "RES 4,H"},
    instruction_info{1, 8, "RES 4,L"},
    instruction_info{1, 16, "RES 4,(HL)"},
    instruction_info{1, 8, "RES 4,A"},
    instruction_info{1, 8, "RES 5,B"},
    instruction_info{1, 8, "RES 5,C"},
    instruction_info{1, 8, "RES 5,D"},
    instruction_info{1, 8, "RES 5,E"},
    instruction_info{1, 8, "RES 5,H"},
    instruction_info{1, 8, "RES 5,L"},
    instruction_info{1, 16, "RES 5,(HL)"},
    instruction_info{1, 8, "RES 5,A"},

    instruction_info{1, 8, "RES 6,B"},
    instruction_info{1, 8, "RES 6,C"},
    instruction_info{1, 8, "RES 6,D"},
    instruction_info{1, 8, "RES 6,E"},
    instruction_info{1, 8, "RES 6,H"},
    instruction_info{1, 8, "RES 6,L"},
    instruction_info{1, 16, "RES 6,(HL)"},
    instruction_info{1, 8, "RES 6,A"},
    instruction_info{1, 8, "RES 7,B"},
    instruction_info{1, 8, "RES 7,C"},
    instruction_info{1, 8, "RES 7,D"},
    instruction_info{1, 8, "RES 7,E"},
    instruction_info{1, 8, "RES 7,H"},
    instruction_info{1, 8, "RES 7,L"},
    instruction_info{1, 16, "RES 7,(HL)"},
    instruction_info{1, 8, "RES 7,A"},

    instruction_info{1, 8, "SET 0,B"},
    instruction_info{1, 8, "SET 0,C"},
    instruction_info{1, 8, "SET 0,D"},
    instruction_info{1, 8, "SET 0,E"},
    instruction_info{1, 8, "SET 0,H"},
    instruction_info{1, 8, "SET 0,L"},
    instruction_info{1, 16, "SET 0,(HL)"},
    instruction_info{1, 8, "SET 0,A"},
    instruction_info{1, 8, "SET 1,B"},
    instruction_info{1, 8, "SET 1,C"},
    instruction_info{1, 8, "SET 1,D"},
    instruction_info{1, 8, "SET 1,E"},
    instruction_info{1, 8, "SET 1,H"},
    instruction_info{1, 8, "SET 1,L"},
    instruction_info{1, 16, "SET 1,(HL)"},
    instruction_info{1, 8, "SET 1,A"},

    instruction_info{1, 8, "SET 2,B"},
    instruction_info{1, 8, "SET 2,C"},
    instruction_info{1, 8, "SET 2,D"},
    instruction_info{1, 8, "SET 2,E"},
    instruction_info{1, 8, "SET 2,H"},
    instruction_info{1, 8, "SET 2,L"},
    instruction_info{1, 16, "SET 2,(HL)"},
    instruction_info{1, 8, "SET 2,A"},
    instruction_info{1, 8, "SET 3,B"},
    instruction_info{1, 8, "SET 3,C"},
    instruction_info{1, 8, "SET 3,D"},
    instruction_info{1, 8, "SET 3,E"},
    instruction_info{1, 8, "SET 3,H"},
    instruction_info{1, 8, "SET 3,L"},
    instruction_info{1, 16, "SET 3,(HL)"},
    instruction_info{1, 8, "SET 3,A"},

    instruction_info{1, 8, "SET 4,B"},
    instruction_info{1, 8, "SET 4,C"},
    instruction_info{1, 8, "SET 4,D"},
    instruction_info{1, 8, "SET 4,E"},
    instruction_info{1, 8, "SET 4,H"},
    instruction_info{1, 8, "SET 4,L"},
    instruction_info{1, 16, "SET 4,(HL)"},
    instruction_info{1, 8, "SET 4,A"},
    instruction_info{1, 8, "SET 5,B"},
    instruction_info{1, 8, "SET 5,C"},
    instruction_info{1, 8, "SET 5,D"},
    instruction_info{1, 8, "SET 5,E"},
    instruction_info{1, 8, "SET 5,H"},
    instruction_info{1, 8, "SET 5,L"},
    instruction_info{1, 16, "SET 5,(HL)"},
    instruction_info{1, 8, "SET 5,A"},

    instruction_info{1, 8, "SET 6,B"},
    instruction_info{1, 8, "SET 6,C"},
    instruction_info{1, 8, "SET 6,D"},
    instruction_info{1, 8, "SET 6,E"},
    instruction_info{1, 8, "SET 6,H"},
    instruction_info{1, 8, "SET 6,L"},
    instruction_info{1, 16, "SET 6,(HL)"},
    instruction_info{1, 8, "SET 6,A"},
    instruction_info{1, 8, "SET 7,B"},
    instruction_info{1, 8, "SET 7,C"},
    instruction_info{1, 8, "SET 7,D"},
    instruction_info{1, 8, "SET 7,E"},
    instruction_info{1, 8, "SET 7,H"},
    instruction_info{1, 8, "SET 7,L"},
    instruction_info{1, 16, "SET 7,(HL)"},
    instruction_info{1, 8, "SET 7,A"}
};

constexpr uint8_t get_false_branch_cycle_count(const uint8_t inst)
{
    switch(inst) {
    case 0x20u:
    case 0x28u:
    case 0x30u:
    case 0x38u:
    case 0xC0u:
    case 0xC8u:
    case 0xD0u:
    case 0xD8u:
        return 8u;
    case 0xC2u:
    case 0xC4u:
    case 0xCAu:
    case 0xCCu:
    case 0xD2u:
    case 0xD4u:
    case 0xDAu:
    case 0xDCu:
        return 12u;
    default:
        return 0u;
    }
}

} // namespace gameboy

#endif //GAMEBOY_INSTRUCTION_H
